{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/TaskHolder.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","text","Header","title","prototype","Proptype","string","isRequired","defaultProps","Task","task","onDelete","reminder","taskTitle","date","color","onClick","id","TaskHolder","tasks","map","App","useState","setTasks","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAUeA,EARA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC3B,OACE,mCACE,wBAAQD,UAAWA,EAAnB,SAA+BC,OCF/BC,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,yBAAQH,UAAU,SAAlB,UACE,6BAAKG,IACL,cAAC,EAAD,CAAQH,UAAU,MAAMC,KAAK,YAKnCC,EAAOE,UAAY,CACjBD,MAAOE,IAASC,OAAOC,YAGzBL,EAAOM,aAAe,CACpBL,MAAO,oBAGMD,Q,OCNAO,EAXF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpB,OACE,sBAAKX,UAAWU,EAAKE,SAAW,WAAa,OAA7C,UACE,6BAAKF,EAAKG,YACV,8BACGH,EAAKI,KAAM,IACZ,cAAC,IAAD,CAAeC,MAAM,MAAMC,QAAS,kBAAML,EAASD,EAAKO,cCGjDC,EAVI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOR,EAAe,EAAfA,SAC3B,OACE,8BACGQ,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKO,UCoCTI,EAtCH,WAAO,IAAD,EACUC,mBAAS,CACjC,CACEL,GAAI,EACJJ,UAAW,eACXC,KAAM,oBACNF,UAAU,GAEZ,CACEK,GAAI,EACJJ,UAAW,iBACXC,KAAM,mBACNF,UAAU,GAEZ,CACEK,GAAI,EACJJ,UAAW,gBACXC,KAAM,qBACNF,UAAU,KAlBE,mBACTO,EADS,KACFI,EADE,KA0BhB,OACE,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,IACCmB,EAAMK,OAAS,EACd,cAAC,EAAD,CAAYL,MAAOA,EAAOR,SARf,SAACM,GAChBM,EAASJ,EAAMM,QAAO,SAACf,GAAD,OAAUA,EAAKO,KAAOA,SASxC,sBCxBOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f54b8bb6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ className, text }) => {\r\n  return (\r\n    <>\r\n      <button className={className}>{text}</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Proptype from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button className=\"btn\" text=\"Add\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.prototype = {\r\n  title: Proptype.string.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"SKN Task Tracker\",\r\n};\r\n\r\nexport default Header;\r\n","// use \"npm install react-icons --save\" to use react-icons\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete }) => {\r\n  return (\r\n    <div className={task.reminder ? \"reminder\" : \"task\"}>\r\n      <h3>{task.taskTitle}</h3>\r\n      <p>\r\n        {task.date}{\" \"}\r\n        <FaTimesCircle color=\"red\" onClick={() => onDelete(task.id)} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst TaskHolder = ({ tasks, onDelete }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHolder;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskHolder from \"./components/TaskHolder\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      taskTitle: \"Doctors Appt\",\n      date: \"Feb 5th at 2.30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      taskTitle: \"School meeting\",\n      date: \"Feb 15th at 10am\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      taskTitle: \"Food shopping\",\n      date: \"Mar 1st at 12.15pm\",\n      reminder: false,\n    },\n  ]);\n\n  const onDelete = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {tasks.length > 0 ? (\n        <TaskHolder tasks={tasks} onDelete={onDelete} />\n      ) : (\n        \"No task to show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}