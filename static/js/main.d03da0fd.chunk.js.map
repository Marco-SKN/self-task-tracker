{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/TaskHolder.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","text","color","onClick","style","background","Header","title","showAdd","showAddTask","prototype","Proptype","string","isRequired","defaultProps","Task","task","onDelete","setReminder","reminder","onDoubleClick","id","taskTitle","date","TaskHolder","tasks","map","AddTask","addTask","useState","setTaskTitle","setDate","emptyText","setEmptyText","onSubmit","e","preventDefault","trim","htmlFor","type","value","onChange","target","checked","App","setShowAddTask","setTasks","console","log","newTask","Math","floor","random","length","selected","window","confirm","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d03da0fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ className, text, color, onClick }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className={className}\r\n        onClick={onClick}\r\n        style={{ background: color }}\r\n      >\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Proptype from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, showAdd, showAddTask }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        className=\"btn\"\r\n        text={showAddTask ? \"Close\" : \"Add\"}\r\n        color={showAddTask ? \"red\" : \"green\"}\r\n        onClick={showAdd}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.prototype = {\r\n  title: Proptype.string.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"SKN Task Tracker\",\r\n};\r\n\r\nexport default Header;\r\n","// use \"npm install react-icons --save\" to use react-icons\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, setReminder }) => {\r\n  return (\r\n    <div\r\n      className={task.reminder ? \"reminder\" : \"task\"}\r\n      onDoubleClick={() => setReminder(task.id)}\r\n    >\r\n      <h3>{task.taskTitle}</h3>\r\n      <p>\r\n        {task.date} <FaTimesCircle color=\"red\" onClick={() => onDelete(task)} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst TaskHolder = ({ tasks, onDelete, setReminder }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          setReminder={setReminder}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHolder;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n  const [emptyText, setEmptyText] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!taskTitle.trim()) {\r\n      setEmptyText(true);\r\n      setTaskTitle(\"\");\r\n      return;\r\n    }\r\n\r\n    addTask({ taskTitle, date, reminder });\r\n    setTaskTitle(\"\");\r\n    setDate(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {/*Task title input */}\r\n      <label htmlFor=\"taskTitle\">Task title : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"taskTitle\"\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          setTaskTitle(e.target.value);\r\n          setEmptyText(false);\r\n        }}\r\n      />\r\n      {emptyText && <p style={{ color: \"red\" }}>Task title is required</p>}\r\n\r\n      {/*Date and Time input */}\r\n      <br></br>\r\n      <label htmlFor=\"dateTime\">Date & Time : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"dateTime\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n\r\n      {/*Reminder Checkbox */}\r\n      <br></br>\r\n      <label htmlFor=\"reminder\">Reminder : </label>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"reminder\"\r\n        checked={reminder}\r\n        onChange={(e) => setReminder(e.target.checked)}\r\n      />\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskHolder from \"./components/TaskHolder\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      taskTitle: \"Doctors Appt\",\n      date: \"Feb 5th at 2.30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      taskTitle: \"School meeting\",\n      date: \"Feb 15th at 10am\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      taskTitle: \"Food shopping\",\n      date: \"Mar 1st at 12.15pm\",\n      reminder: false,\n    },\n  ]);\n\n  const onDelete = (selected) => {\n    if (window.confirm(`Delete \"${selected.taskTitle}\" ?`)) {\n      setTasks(tasks.filter((task) => task.id !== selected.id));\n    } else return;\n  };\n\n  const setReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n    console.log(\"Setting reminder for id: \" + id);\n  };\n\n  const showAdd = () => {\n    setShowAddTask(!showAddTask);\n    console.log(\"Set show addTask to \" + !showAddTask);\n  };\n\n  const addTask = (newTask) => {\n    let id = Math.floor(Math.random() * 10000);\n    newTask.id = id;\n    setTasks([...tasks, newTask]);\n    console.log(tasks);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header showAdd={showAdd} showAddTask={showAddTask} />\n      {showAddTask && <AddTask addTask={addTask} />}\n      {tasks.length > 0 ? (\n        <TaskHolder\n          tasks={tasks}\n          onDelete={onDelete}\n          setReminder={setReminder}\n        />\n      ) : (\n        \"No task to show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}