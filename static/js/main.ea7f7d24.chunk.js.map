{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/TaskHolder.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","text","onClick","Header","title","showAdd","prototype","Proptype","string","isRequired","defaultProps","Task","task","onDelete","setReminder","reminder","onDoubleClick","id","taskTitle","date","color","TaskHolder","tasks","map","AddTask","addTask","useState","setTaskTitle","setDate","emptyText","setEmptyText","onSubmit","e","preventDefault","trim","htmlFor","type","value","onChange","target","style","checked","App","showAddTask","setShowAddTask","setTasks","console","log","newTask","Math","floor","random","length","selected","window","confirm","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea7f7d24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ className, text, onClick }) => {\r\n  return (\r\n    <>\r\n      <button className={className} onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Proptype from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button className=\"btn\" text=\"Add\" onClick={showAdd} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.prototype = {\r\n  title: Proptype.string.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"SKN Task Tracker\",\r\n};\r\n\r\nexport default Header;\r\n","// use \"npm install react-icons --save\" to use react-icons\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, setReminder }) => {\r\n  return (\r\n    <div\r\n      className={task.reminder ? \"reminder\" : \"task\"}\r\n      onDoubleClick={() => setReminder(task.id)}\r\n    >\r\n      <h3>{task.taskTitle}</h3>\r\n      <p>\r\n        {task.date} <FaTimesCircle color=\"red\" onClick={() => onDelete(task)} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst TaskHolder = ({ tasks, onDelete, setReminder }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          setReminder={setReminder}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHolder;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n  const [emptyText, setEmptyText] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!taskTitle.trim()) {\r\n      setEmptyText(true);\r\n      setTaskTitle(\"\");\r\n      return;\r\n    }\r\n\r\n    addTask({ taskTitle, date, reminder });\r\n    setTaskTitle(\"\");\r\n    setDate(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {/*Task title input */}\r\n      <label htmlFor=\"taskTitle\">Task title : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"taskTitle\"\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          setTaskTitle(e.target.value);\r\n          setEmptyText(false);\r\n        }}\r\n      />\r\n      {emptyText && <p style={{ color: \"red\" }}>Task title is required</p>}\r\n\r\n      {/*Date and Time input */}\r\n      <br></br>\r\n      <label htmlFor=\"dateTime\">Date & Time : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"dateTime\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n\r\n      {/*Reminder Checkbox */}\r\n      <br></br>\r\n      <label htmlFor=\"reminder\">Reminder : </label>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"reminder\"\r\n        checked={reminder}\r\n        onChange={(e) => setReminder(e.target.checked)}\r\n      />\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskHolder from \"./components/TaskHolder\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      taskTitle: \"Doctors Appt\",\n      date: \"Feb 5th at 2.30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      taskTitle: \"School meeting\",\n      date: \"Feb 15th at 10am\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      taskTitle: \"Food shopping\",\n      date: \"Mar 1st at 12.15pm\",\n      reminder: false,\n    },\n  ]);\n\n  const onDelete = (selected) => {\n    if (window.confirm(`Delete \"${selected.taskTitle}\" ?`)) {\n      setTasks(tasks.filter((task) => task.id !== selected.id));\n    } else return;\n  };\n\n  const setReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n    console.log(\"Setting reminder for id: \" + id);\n  };\n\n  const showAdd = () => {\n    setShowAddTask(!showAddTask);\n    console.log(\"Set show addTask to \" + !showAddTask);\n  };\n\n  const addTask = (newTask) => {\n    let id = Math.floor(Math.random() * 10000);\n    newTask.id = id;\n    setTasks([...tasks, newTask]);\n    console.log(tasks);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header showAdd={showAdd} />\n      {showAddTask && <AddTask addTask={addTask} />}\n      {tasks.length > 0 ? (\n        <TaskHolder\n          tasks={tasks}\n          onDelete={onDelete}\n          setReminder={setReminder}\n        />\n      ) : (\n        \"No task to show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}